import json
from FusionBrain_AI import generate
import keybaords
import config
import datetime
import random
from pyrogram import Client, filters
from pyrogram.filters import reply
import base64
from pyrogram.types import ForceReply

bot = Client(
    api_id=config.API_ID,
    api_hash=config.API_HASH,
    bot_token=config.BOT_TOKEN,
    name='my_bot'
)
def button_filter(button):
    async def func(_,__,msg):
        return msg.text == button.text
    return filters.create(func, 'ButtonFilter', button=button)

@bot.on_message(filters.command("start"))
async def start(bot, message):
    await bot.send_photo(message.chat.id, 'Screenshot 2025-06-30 174022.png')
    await message.reply("Hello how can I help you?",reply_markup=keybaords.kb_main)
    with open('user.json', 'r') as file:
        user = json.load(file)
    if str(message.from_user.id) not in user.keys():
        user[message.from_user.id] = 100
        with open('user.json', 'w') as file:
            json.dump(user, file)

@bot.on_message(filters.command('image'))
async def image(bot, message):
    if len(message.text.split()) > 1:
        query = message.text.replace('/image','')
        await message.reply_text(f"A picture is generate by the requests of '{query}', wait a little bit...")
        images = await generate(query)
        if images:
            image_data = base64.b64decode(images[0])
            img_num = random.randint(1, 99)
            with open(f'images/image.jpg', "wb") as file:
                file.write(image_data)
            await bot.send_photo(message.chat.id, f'images/image.{img_num}jpg', reply_to_message_id=message.id)
        else:
            await message.reply_text('Send something',reply_to_message_id=message.id)


@bot.on_message(filters.command('games') | button_filter(keybaords.btn_games))
async def games(bot, message):
    await message.reply('choose a game', reply_markup=keybaords.kb_games)

query_text = "what picture u want to generate"
@bot.on_message(button_filter(keybaords.btn_image))
async def image_command(bot, message):
    await message.reply(query_text, reply_markup=ForceReply(True))

import base64
import random
from pyrogram import filters

@bot.on_message(filters.reply)
async def reply(bot, message):
    if message.reply_to_message.text == query_text:
        query = message.text


        await message.reply_text(f'A image will be generated by the will of **{query}**. Wait a minute')

        images = await generate(query)

        if images:
            image_data = base64.b64decode(images[0])
            img_num = random.randint(1, 99)
            with open(f'images/image{img_num}.jpg', 'wb') as file:
                file.write(image_data)
            await bot.send_photo(
                message.chat.id,
                f'images/image{img_num}.jpg',
                reply_to_message_id=message.id,reply_markup=keybaords.kb_main
            )
        else:
            await message.reply_text(
                'There was a problem, try again',
                reply_to_message_id=message.id,reply_markup=keybaords.kb_main
            )


@bot.on_message(filters.command('back') | button_filter(keybaords.btn_back))
async def back(bot, message):
    await message.reply(
        "Go back to main menu",reply_markup=keybaords.kb_main
    )


@bot.on_message(filters.command('game') | button_filter(keybaords.btn_rps))
async def game(bot, message):
    with open("user.json", "r") as file:
        users = json.load(file)
    if users[str(message.from_user.id)] >= 10:
        await message.reply("your turn", reply_markup=keybaords.kb_rps)
    else:
        await message.reply(f"not enough info."
                            f"your score{users[str(message.from_user.id)]}."
                            f"minimal scorde in 1 match- 10")

@bot.on_message(button_filter(keybaords.btn_rock) | button_filter(keybaords.btn_scissors) | button_filter(keybaords.btn_paper))
async def choice_rps(bot, message):
    with open("user.json", "r") as file:
        users = json.load(file)
    rock = (keybaords.btn_rock.text)
    scissors = (keybaords.btn_scissors.text)
    paper = keybaords.btn_paper.text
    user = message.text
    pc = random.choice([rock, scissors, paper])
    if user == pc:
        await message.reply("Draw")
    elif (user == rock and pc == scissors) or (user == scissors and pc == paper) or (user == paper and pc == rock):
        await message.reply(f"You won. Bot chose {pc}", reply_markup=keybaords.kb_games)
        users[str(message.from_user.id)] += 10
    else:
        await message.reply(f"You lost. Bot chose {pc}", reply_markup=keybaords.kb_games)
        users[str(message.from_user.id)] -= 10
    with open("user.json", "w") as file:
        json.dump(users, file)

@bot.on_message(filters.command('quests') | button_filter(keybaords.btn_quest))
async def quest(bot, message):
    await message.reply_text('Do u want to go too a fantastic vacation, that are filled with adventures and quests?', reply_markup=keybaords.inline_kb_start_quest)


@bot.on_callback_query()
async def handle_query(bot, query):
    if query.data == 'start_quest':
        await bot.answer_callback_query(query.id,text='Hello u can read 2 Storys and choose the ending',show_alert=True)
        await query.message.reply_text('You stand in front of 2 doors. What door will you choose?', reply_markup=keybaords.inline_kb_left_door)
        await query.message.reply_text('You stand in front of 2 doors. What door will you choose?',reply_markup=keybaords.inline_kb_right_door)
    elif query.data == 'left_door':
        await query.message.reply_text('U are on a ship with your friens and other pirats are attacking you! You have 2 options:', reply_markup=keybaords.inline_kb_left_door)
    elif query.data == 'right_door':
        await query.message.reply_text('you are a wizard and a golem is attacking you!You can only attack with one magic power', reply_markup=keybaords.inline_kb_right_door)
    elif query.data == 'fight':
        await bot.answer_callback_query(query.id, text='you fight with the pirats you won, and you found the tressure',show_alert=True)
        await query.message.reply_text('after u left the iland u were on the way to home.On the way was a Sea beast what will u do you have 2 options:',reply_markup=keybaords.inline_kb_after_fight)
    elif query.data == 'run':
        await bot.answer_callback_query(query.id, text='you try to run away but die',show_alert=True)
    elif query.data == 'fire_magic':
        await bot.answer_callback_query(query.id, text='you should use stone magic you died', show_alert=True)
    elif query.data == 'stone_magic':
        await bot.answer_callback_query(query.id, text='you killed him u get 200coins', show_alert=True)
        await query.message.reply_text('U can buy Food what will u buy',reply_markup=keybaords.inline_kb_killed_golem)
    elif query.data == 'cannons':
        await bot.answer_callback_query(query.id, text='U died', show_alert=True)
    elif query.data == 'laser-saber':
        await bot.answer_callback_query(query.id, text='You killed him now u can return home', show_alert=True)
    elif query.data == 'steak':
        await bot.answer_callback_query(query.id, text='the steak was poisened but it didnt affect u', show_alert=True)
    elif query.data == 'bread':
        await bot.answer_callback_query(query.id, text=')the bread was yummy after the long day u returned home', show_alert=True)

@bot.on_message(filters.command('info') | button_filter(keybaords.btn_info))
async def info(bot, message):
    await message.reply('start-writes a picture' )
    await message.reply('info-writes what all comands do')

@bot.on_message(filters.command("time"))
async def time(bot, message):
    await message.reply(f'Now the time and date are:{datetime.datetime.now()}')

@bot.on_message()
async def echo(bot, message):
    await message.reply(f'you said: {message.text}')
    if message.text == 'hello':
        await message.reply('hello how is your day?')
    elif message.text == 'bye':
        await message.reply('have a good day')

bot.run()
